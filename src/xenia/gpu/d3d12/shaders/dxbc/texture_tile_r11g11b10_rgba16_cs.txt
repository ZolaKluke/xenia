//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer XeTextureTileConstants
// {
//
//   uint xe_texture_tile_guest_base;   // Offset:    0 Size:     4
//   uint xe_texture_tile_info;         // Offset:    4 Size:     4
//   uint xe_texture_tile_offset;       // Offset:    8 Size:     4
//   uint xe_texture_tile_size;         // Offset:   12 Size:     4
//   uint xe_texture_tile_host_base;    // Offset:   16 Size:     4
//   uint xe_texture_tile_host_pitch;   // Offset:   20 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      ID      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- ------- -------------- ------
// xe_texture_tile_source            texture    byte         r/o      T0             t0      1 
// xe_texture_tile_dest                  UAV    byte         r/w      U0             u0      1 
// XeTextureTileConstants            cbuffer      NA          NA     CB0            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_1
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[0:0][2], immediateIndexed, space=0
dcl_resource_raw T0[0:0], space=0
dcl_uav_raw U0[0:0], space=0
dcl_input vThreadID.xy
dcl_temps 10
dcl_thread_group 8, 32, 1
ushr r0.y, CB0[0][0].w, l(16)
mov r0.x, CB0[0][0].w
and r0.xy, r0.xyxx, l(0x0000ffff, 0x0000ffff, 0, 0)
ubfe r0.z, l(1), l(9), CB0[0][0].y
ishl r0.xy, r0.xyxx, r0.zzzz
ishl r1.x, vThreadID.x, l(2)
mov r1.y, vThreadID.y
uge r0.yw, r1.xxxy, r0.xxxy
or r0.y, r0.w, r0.y
if_nz r0.y
  ret 
endif 
ushr r2.xyzw, CB0[0][0].zzyy, l(5, 10, 10, 19)
mov r3.x, CB0[0][0].z
mov r3.y, r2.x
and r0.yw, r3.xxxy, l(0, 31, 0, 31)
ushr r1.yz, r1.xxyx, r0.zzzz
iadd r0.yw, r0.yyyw, r1.yyyz
bfi r1.yz, l(0, 9, 9, 0), l(0, 5, 5, 0), r2.wwzw, l(0, 0, 0, 0)
if_nz r1.y
  iadd r3.xyzw, r0.yyyy, l(0, 1, 2, 3)
  ushr r2.xz, r0.wwww, l(4, 0, 3, 0)
  ubfe r1.w, l(1), l(12), CB0[0][0].z
  ushr r4.xy, r1.yzyy, l(4, 5, 0, 0)
  imad r1.y, r1.w, r4.x, r2.x
  ushr r5.xyzw, r3.xyzw, l(5, 5, 5, 5)
  imad r4.xyzw, r1.yyyy, r4.yyyy, r5.xyzw
  ishl r1.y, r0.w, l(10)
  and r1.y, r1.y, l(6144)
  bfi r5.xyzw, l(3, 3, 3, 3), l(8, 8, 8, 8), r3.xyzw, r1.yyyy
  ushr r5.xyzw, r5.xyzw, l(6, 6, 6, 6)
  iadd r1.y, r1.w, r2.z
  ushr r3.xyzw, r3.xyzw, l(3, 3, 3, 3)
  bfi r1.w, l(1), l(1), r1.y, l(0)
  iadd r3.xyzw, r1.wwww, r3.xyzw
  bfi r3.xyzw, l(2, 2, 2, 2), l(1, 1, 1, 1), r3.xyzw, l(0, 0, 0, 0)
  bfi r3.xyzw, l(1, 1, 1, 1), l(0, 0, 0, 0), r1.yyyy, r3.xyzw
  and r6.xyzw, r5.xyzw, l(112, 112, 112, 112)
  bfi r7.xyzw, l(20, 20, 20, 20), l(10, 10, 10, 10), r4.xyzw, l(0, 0, 0, 0)
  imad r7.xyzw, r6.xyzw, l(2, 2, 2, 2), r7.xyzw
  bfi r7.xyzw, l(4, 4, 4, 4), l(0, 0, 0, 0), r5.xyzw, r7.xyzw
  bfi r7.xyzw, l(2, 2, 2, 2), l(8, 8, 8, 8), r2.yyyy, r7.xyzw
  bfi r8.xyzw, l(1, 1, 1, 1), l(4, 4, 4, 4), r0.wwww, r7.xyzw
  ubfe r7.xyzw, l(3, 3, 3, 3), l(6, 6, 6, 6), r7.xyzw
  and r9.xyzw, r3.xyzw, l(6, 6, 6, 6)
  bfi r3.xyzw, l(1, 1, 1, 1), l(8, 8, 8, 8), r3.xyzw, l(0, 0, 0, 0)
  imad r3.xyzw, r7.xyzw, l(32, 32, 32, 32), r3.xyzw
  imad r3.xyzw, r9.xyzw, l(4, 4, 4, 4), r3.xyzw
  bfi r4.xyzw, l(20, 20, 20, 20), l(13, 13, 13, 13), r4.xyzw, l(0, 0, 0, 0)
  imad r4.xyzw, r6.xyzw, l(16, 16, 16, 16), r4.xyzw
  bfi r4.xyzw, l(4, 4, 4, 4), l(3, 3, 3, 3), r5.xyzw, r4.xyzw
  bfi r2.xyzw, l(2, 2, 2, 2), l(11, 11, 11, 11), r2.yyyy, r4.xyzw
  bfi r2.xyzw, l(1, 1, 1, 1), l(7, 7, 7, 7), r0.wwww, r2.xyzw
  bfi r2.xyzw, l(9, 9, 9, 9), l(3, 3, 3, 3), r3.xyzw, r2.xyzw
  bfi r2.xyzw, l(6, 6, 6, 6), l(0, 0, 0, 0), r8.xyzw, r2.xyzw
else 
  iadd r3.xyzw, r0.yyyy, l(0, 1, 2, 3)
  ushr r4.xyzw, r3.xyzw, l(5, 5, 5, 5)
  ushr r1.yw, r0.wwww, l(0, 5, 0, 2)
  ushr r0.y, r1.z, l(5)
  imad r4.xyzw, r1.yyyy, r0.yyyy, r4.xyzw
  ishl r1.yz, r0.wwww, l(0, 4, 7, 0)
  and r1.yz, r1.yyzy, l(0, 224, 2048, 0)
  bfi r5.xyzw, l(3, 3, 3, 3), l(2, 2, 2, 2), r3.xyzw, r1.yyyy
  ishl r0.y, r1.y, l(1)
  bfi r6.xyzw, l(3, 3, 3, 3), l(3, 3, 3, 3), r3.xyzw, r0.yyyy
  and r6.xyzw, r6.xyzw, l(480, 480, 480, 480)
  bfi r7.xyzw, l(23, 23, 23, 23), l(9, 9, 9, 9), r4.xyzw, r6.xyzw
  bfi r7.xyzw, l(4, 4, 4, 4), l(0, 0, 0, 0), r5.xyzw, r7.xyzw
  bfi r7.xyzw, l(1, 1, 1, 1), l(4, 4, 4, 4), r0.wwww, r7.xyzw
  ishl r8.xyzw, r6.xyzw, l(3, 3, 3, 3)
  bfi r8.xyzw, l(23, 23, 23, 23), l(12, 12, 12, 12), r4.xyzw, r8.xyzw
  bfi r8.xyzw, l(4, 4, 4, 4), l(3, 3, 3, 3), r5.xyzw, r8.xyzw
  bfi r8.xyzw, l(1, 1, 1, 1), l(7, 7, 7, 7), r0.wwww, r8.xyzw
  bfi r8.xyzw, l(12, 12, 12, 12), l(0, 0, 0, 0), r1.zzzz, r8.xyzw
  ishl r6.xyzw, r6.xyzw, l(2, 2, 2, 2)
  bfi r4.xyzw, l(23, 23, 23, 23), l(11, 11, 11, 11), r4.xyzw, r6.xyzw
  bfi r4.xyzw, l(4, 4, 4, 4), l(2, 2, 2, 2), r5.xyzw, r4.xyzw
  bfi r4.xyzw, l(1, 1, 1, 1), l(6, 6, 6, 6), r0.wwww, r4.xyzw
  and r4.xyzw, r4.xyzw, l(1792, 1792, 1792, 1792)
  iadd r4.xyzw, r8.xyzw, r4.xyzw
  ushr r3.xyzw, r3.xyzw, l(3, 3, 3, 3)
  and r0.y, r1.w, l(2)
  iadd r3.xyzw, r0.yyyy, r3.xyzw
  bfi r3.xyzw, l(2, 2, 2, 2), l(6, 6, 6, 6), r3.xyzw, l(0, 0, 0, 0)
  iadd r3.xyzw, r4.xyzw, r3.xyzw
  bfi r2.xyzw, l(6, 6, 6, 6), l(0, 0, 0, 0), r7.xyzw, r3.xyzw
endif 
iadd r2.xyzw, r2.xyzw, CB0[0][0].xxxx
ishl r0.y, r0.z, l(1)
ishl r2.xyzw, r2.xyzw, r0.yyyy
and r0.y, r0.z, vThreadID.y
ishl r0.y, r0.y, l(3)
iadd r2.xyzw, r0.yyyy, r2.xyzw
if_nz r0.z
  iadd r2.xyzw, r2.xxyy, l(0, 4, 0, 4)
endif 
imad r0.yzw, vThreadID.xxxx, l(0, 4, 4, 4), l(0, 1, 2, 3)
ult r0.xyz, r0.yzwy, r0.xxxx
and r1.yz, CB0[0][0].yyyy, l(0, 7, 2, 0)
imad r0.w, vThreadID.y, CB0[0][1].y, CB0[0][1].x
ishl r1.x, r1.x, l(3)
iadd r0.w, r0.w, r1.x
ld_raw r3.xyzw, r0.w, T0[0].xyzw
ubfe r1.xw, l(11, 0, 0, 11), l(5, 0, 0, 5), r3.xxxz
ushr r3.xyzw, r3.xzyw, l(21, 21, 6, 6)
imad r4.xy, r3.xyxx, l(2048, 2048, 0, 0), r1.xwxx
bfi r4.xy, l(10, 10, 0, 0), l(22, 22, 0, 0), r3.zwzz, r4.xyxx
ubfe r4.z, l(2), l(1), CB0[0][0].y
xor r1.y, r1.y, r4.z
and r1.y, r1.y, l(1)
if_nz r1.y
  ishl r1.xw, r1.xxxw, l(8, 0, 0, 8)
  imad r1.xw, r3.xxxy, l(0x00080000, 0, 0, 0x00080000), r1.xxxw
  bfi r1.xw, l(10, 0, 0, 10), l(30, 0, 0, 30), r3.zzzw, r1.xxxw
  and r1.xw, r1.xxxw, l(0xff00ff00, 0, 0, 0xff00ff00)
  ushr r3.xy, r4.xyxx, l(8, 8, 0, 0)
  and r3.xy, r3.xyxx, l(0x00ff00ff, 0x00ff00ff, 0, 0)
  iadd r4.xy, r1.xwxx, r3.xyxx
endif 
if_nz r1.z
  ushr r1.xw, r4.xxxy, l(16, 0, 0, 16)
  bfi r4.xy, l(16, 16, 0, 0), l(16, 16, 0, 0), r4.xyxx, r1.xwxx
endif 
store_raw U0[0].x, r2.x, r4.x
if_nz r0.x
  store_raw U0[0].x, r2.y, r4.y
  if_nz r0.y
    iadd r0.x, r0.w, l(16)
    ld_raw r3.xyzw, r0.x, T0[0].xyzw
    ubfe r0.xy, l(11, 11, 0, 0), l(5, 5, 0, 0), r3.xzxx
    ushr r3.xyzw, r3.xzyw, l(21, 21, 6, 6)
    imad r1.xw, r3.xxxy, l(2048, 0, 0, 2048), r0.xxxy
    bfi r1.xw, l(10, 0, 0, 10), l(22, 0, 0, 22), r3.zzzw, r1.xxxw
    if_nz r1.y
      ishl r0.xy, r0.xyxx, l(8, 8, 0, 0)
      imad r0.xy, r3.xyxx, l(0x00080000, 0x00080000, 0, 0), r0.xyxx
      bfi r0.xy, l(10, 10, 0, 0), l(30, 30, 0, 0), r3.zwzz, r0.xyxx
      and r0.xy, r0.xyxx, l(0xff00ff00, 0xff00ff00, 0, 0)
      ushr r2.xy, r1.xwxx, l(8, 8, 0, 0)
      and r2.xy, r2.xyxx, l(0x00ff00ff, 0x00ff00ff, 0, 0)
      iadd r1.xw, r0.xxxy, r2.xxxy
    endif 
    if_nz r1.z
      ushr r0.xy, r1.xwxx, l(16, 16, 0, 0)
      bfi r1.xw, l(16, 0, 0, 16), l(16, 0, 0, 16), r1.xxxw, r0.xxxy
    endif 
    store_raw U0[0].x, r2.z, r1.x
    if_nz r0.z
      store_raw U0[0].x, r2.w, r1.w
    endif 
  endif 
endif 
ret 
// Approximately 154 instruction slots used
